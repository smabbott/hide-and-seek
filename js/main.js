// Generated by CoffeeScript 1.3.3
(function() {
  var Card, Toggle;

  Card = (function() {

    Card.prototype.el = {};

    function Card(publicProperties) {
      this.publicProperties = publicProperties;
    }

    Card.prototype.template = function() {
      var base, list, prop;
      list = (function() {
        var _i, _len, _ref, _results;
        _ref = Object.keys(this.publicProperties);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          prop = _ref[_i];
          _results.push("<dt>" + prop + "</dt><dd>{{" + prop + "}}</dd>");
        }
        return _results;
      }).call(this);
      base = $($('#card-template').html());
      base.find('.properties').append(list.join(''));
      return base;
    };

    Card.prototype.render = function() {
      return this.el = $(Mustache.render($("<div></div>").append(this.template()).html(), this.publicProperties));
    };

    return Card;

  })();

  Toggle = (function() {

    function Toggle() {}

    return Toggle;

  })();

  $(function() {
    var candidate, card, _i, _len, _ref, _results;
    window.cards = (function() {
      var _i, _len, _ref, _results;
      _ref = window.candidates;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        candidate = _ref[_i];
        _results.push(new Card(candidate));
      }
      return _results;
    })();
    _ref = window.cards;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      card = _ref[_i];
      card.render();
      _results.push($('.candidates').append(card.el));
    }
    return _results;
  });

}).call(this);
